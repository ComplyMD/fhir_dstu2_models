<<%= (is_lowercase) ? name.downcase : name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if !model.valueBoolean().nil? -%><valueBoolean value="<%= model.valueBoolean() %>"/><%- end -%>
    <%- if !model.valueDecimal().nil? -%><valueDecimal value="<%= model.valueDecimal() %>"/><%- end -%>
    <%- if !model.valueInteger().nil? -%><valueInteger value="<%= model.valueInteger() %>"/><%- end -%>
    <%- if !model.valueDate().nil? -%><%- if (!model.valueDate().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1]))?)?\Z/).nil?) -%><valueDate value="<%= model.valueDate %>"/><%- end -%><%- end -%>
    <%- if !model.valueDateTime().nil? -%><%- if (!model.valueDateTime().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><valueDateTime value="<%= model.valueDateTime %>"/><%- end -%><%- end -%>
    <%- if !model.valueInstant().nil? -%><%- if (!model.valueInstant().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))))\Z/).nil?) -%><valueInstant value="<%= model.valueInstant %>"/><%- end -%><%- end -%>
    <%- if !model.valueTime().nil? -%><%- if (!model.valueTime().match(/\A([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?\Z/).nil?) -%><valueTime value="<%= model.valueTime %>"/><%- end -%><%- end -%>
    <%- if !model.valueString().nil? -%><valueString value="<%= model.valueString() %>"/><%- end -%>
    <%- if !model.valueUri().nil? -%><valueUri value="<%= model.valueUri() %>"/><%- end -%>
    <%- if !model.valueAttachment().nil? -%><%== render :template => 'attachment', :locals => {name: 'valueAttachment', model: model.valueAttachment()} %><%- end -%>
    <%- if !model.valueCoding().nil? -%><%== render :template => 'coding', :locals => {name: 'valueCoding', model: model.valueCoding()} %><%- end -%>
    <%- if !model.valueQuantity().nil? -%><%== render :template => 'quantity', :locals => {name: 'valueQuantity', model: model.valueQuantity()} %><%- end -%>
    <%- if !model.valueReference().nil? -%><%== render :template => 'reference', :locals => {name: 'valueReference', model: model.valueReference()} %><%- end -%>
</<%= (is_lowercase) ? name.downcase : name %>>
