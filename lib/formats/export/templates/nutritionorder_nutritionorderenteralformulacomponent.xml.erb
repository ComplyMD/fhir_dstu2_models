<<%= (is_lowercase) ? name.downcase : name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if !model.administrationInstructions().nil? -%><administrationInstructions value="<%= model.administrationInstructions() %>"/><%- end -%>
    <%- if !model.baseFormulaType().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'baseFormulaType', model: model.baseFormulaType()} %><%- end -%>
    <%- if !model.baseFormulaProductName().nil? -%><baseFormulaProductName value="<%= model.baseFormulaProductName() %>"/><%- end -%>
    <%- if !model.scheduled().nil? -%><%== render :template => 'timing', :locals => {name: 'scheduled', model: model.scheduled()} %><%- end -%>
    <%- if !model.additiveType().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'additiveType', model: model.additiveType()} %><%- end -%>
    <%- if !model.additiveProductName().nil? -%><additiveProductName value="<%= model.additiveProductName() %>"/><%- end -%>
    <%- if !model.caloricDensity().nil? -%><%== render :template => 'quantity', :locals => {name: 'caloricDensity', model: model.caloricDensity()} %><%- end -%>
    <%- if !model.routeofAdministration().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'routeofAdministration', model: model.routeofAdministration()} %><%- end -%>
    <%- if !model.quantity().nil? -%><%== render :template => 'quantity', :locals => {name: 'quantity', model: model.quantity()} %><%- end -%>
    <%- if !model.rate().nil? -%><%== render :template => 'ratio', :locals => {name: 'rate', model: model.rate()} %><%- end -%>
    <%- if !model.rateAdjustment().nil? -%><%== render :template => 'quantity', :locals => {name: 'rateAdjustment', model: model.rateAdjustment()} %><%- end -%>
    <%- if !model.maxVolumeToDeliver().nil? -%><%== render :template => 'quantity', :locals => {name: 'maxVolumeToDeliver', model: model.maxVolumeToDeliver()} %><%- end -%>
</<%= (is_lowercase) ? name.downcase : name %>>
