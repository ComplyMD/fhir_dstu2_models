<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'Specimen' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if (!model.identifier().nil? && !model.identifier.empty?) -%><%- model.identifier().each do |element| -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: element} %><%- end -%><%- end -%>
    <%- if !model.fhirType().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'type', model: model.fhirType()} %><%- end -%>
    <%- if (!model.parent().nil? && !model.parent.empty?) -%><%- model.parent().each do |element| -%><%== render :template => 'reference', :locals => {name: 'parent', model: element} %><%- end -%><%- end -%>
    <%- if !model.subject().nil? -%><%== render :template => 'reference', :locals => {name: 'subject', model: model.subject()} %><%- end -%>
    <%- if !model.accessionIdentifier().nil? -%><%== render :template => 'identifier', :locals => {name: 'accessionIdentifier', model: model.accessionIdentifier()} %><%- end -%>
    <%- if !model.receivedTime().nil? -%><%- if (!model.receivedTime().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><receivedTime value="<%= model.receivedTime %>"/><%- end -%><%- end -%>
    <%- if !model.fhirCollection().nil? -%><%== render :template => 'specimen_specimencollectioncomponent', :locals => {name: 'collection', model: model.fhirCollection()} %><%- end -%>
    <%- if (!model.treatment().nil? && !model.treatment.empty?) -%><%- model.treatment().each do |element| -%><%== render :template => 'specimen_specimentreatmentcomponent', :locals => {name: 'treatment', model: element} %><%- end -%><%- end -%>
    <%- if (!model.container().nil? && !model.container.empty?) -%><%- model.container().each do |element| -%><%== render :template => 'specimen_specimencontainercomponent', :locals => {name: 'container', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
