<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'Encounter' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if (!model.identifier().nil? && !model.identifier.empty?) -%><%- model.identifier().each do |element| -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: element} %><%- end -%><%- end -%>
    <%- if !model.status().nil? -%><status value="<%= model.status %>"<%- if model.has_primitive_extension?('status') -%>><%== model.get_primitive_extension('status').to_xml(is_root: false, is_lowercase: true)  %></status><%- else -%>/><%- end -%><%- end -%>
    <%- if (!model.statusHistory().nil? && !model.statusHistory.empty?) -%><%- model.statusHistory().each do |element| -%><%== render :template => 'encounter_encounterstatushistorycomponent', :locals => {name: 'statusHistory', model: element} %><%- end -%><%- end -%>
    <%- if !model.fhirClass().nil? -%><class value="<%= model.fhirClass %>"<%- if model.has_primitive_extension?('fhirClass') -%>><%== model.get_primitive_extension('fhirClass').to_xml(is_root: false, is_lowercase: true)  %></class><%- else -%>/><%- end -%><%- end -%>
    <%- if (!model.fhirType().nil? && !model.fhirType.empty?) -%><%- model.fhirType().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'type', model: element} %><%- end -%><%- end -%>
    <%- if !model.priority().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'priority', model: model.priority()} %><%- end -%>
    <%- if !model.patient().nil? -%><%== render :template => 'reference', :locals => {name: 'patient', model: model.patient()} %><%- end -%>
    <%- if (!model.episodeOfCare().nil? && !model.episodeOfCare.empty?) -%><%- model.episodeOfCare().each do |element| -%><%== render :template => 'reference', :locals => {name: 'episodeOfCare', model: element} %><%- end -%><%- end -%>
    <%- if (!model.incomingReferral().nil? && !model.incomingReferral.empty?) -%><%- model.incomingReferral().each do |element| -%><%== render :template => 'reference', :locals => {name: 'incomingReferral', model: element} %><%- end -%><%- end -%>
    <%- if (!model.participant().nil? && !model.participant.empty?) -%><%- model.participant().each do |element| -%><%== render :template => 'encounter_encounterparticipantcomponent', :locals => {name: 'participant', model: element} %><%- end -%><%- end -%>
    <%- if !model.appointment().nil? -%><%== render :template => 'reference', :locals => {name: 'appointment', model: model.appointment()} %><%- end -%>
    <%- if !model.period().nil? -%><%== render :template => 'period', :locals => {name: 'period', model: model.period()} %><%- end -%>
    <%- if !model.length().nil? -%><%== render :template => 'quantity', :locals => {name: 'length', model: model.length()} %><%- end -%>
    <%- if (!model.reason().nil? && !model.reason.empty?) -%><%- model.reason().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'reason', model: element} %><%- end -%><%- end -%>
    <%- if (!model.indication().nil? && !model.indication.empty?) -%><%- model.indication().each do |element| -%><%== render :template => 'reference', :locals => {name: 'indication', model: element} %><%- end -%><%- end -%>
    <%- if !model.hospitalization().nil? -%><%== render :template => 'encounter_encounterhospitalizationcomponent', :locals => {name: 'hospitalization', model: model.hospitalization()} %><%- end -%>
    <%- if (!model.location().nil? && !model.location.empty?) -%><%- model.location().each do |element| -%><%== render :template => 'encounter_encounterlocationcomponent', :locals => {name: 'location', model: element} %><%- end -%><%- end -%>
    <%- if !model.serviceProvider().nil? -%><%== render :template => 'reference', :locals => {name: 'serviceProvider', model: model.serviceProvider()} %><%- end -%>
    <%- if !model.partOf().nil? -%><%== render :template => 'reference', :locals => {name: 'partOf', model: model.partOf()} %><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
