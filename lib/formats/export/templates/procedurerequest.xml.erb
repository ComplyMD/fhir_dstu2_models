<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'ProcedureRequest' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if (!model.identifier().nil? && !model.identifier.empty?) -%><%- model.identifier().each do |element| -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: element} %><%- end -%><%- end -%>
    <%- if !model.subject().nil? -%><%== render :template => 'reference', :locals => {name: 'subject', model: model.subject()} %><%- end -%>
    <%- if !model.code().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'code', model: model.code()} %><%- end -%>
    <%- if (!model.bodySite().nil? && !model.bodySite.empty?) -%><%- model.bodySite().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'bodySite', model: element} %><%- end -%><%- end -%>
    <%- if !model.reasonCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'reasonCodeableConcept', model: model.reasonCodeableConcept()} %><%- end -%>
    <%- if !model.reasonReference().nil? -%><%== render :template => 'reference', :locals => {name: 'reasonReference', model: model.reasonReference()} %><%- end -%>
    <%- if !model.scheduledDateTime.nil? -%><%- if (!model.scheduledDateTime.match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><scheduledDateTime value="<%= model.scheduledDateTime %>"<%- if model.has_primitive_extension?('scheduledDateTime') -%>><%== model.get_primitive_extension('scheduledDateTime').to_xml(is_root: false, is_lowercase: true)  %></scheduledDateTime><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.scheduledPeriod().nil? -%><%== render :template => 'period', :locals => {name: 'scheduledPeriod', model: model.scheduledPeriod()} %><%- end -%>
    <%- if !model.scheduledTiming().nil? -%><%== render :template => 'timing', :locals => {name: 'scheduledTiming', model: model.scheduledTiming()} %><%- end -%>
    <%- if !model.encounter().nil? -%><%== render :template => 'reference', :locals => {name: 'encounter', model: model.encounter()} %><%- end -%>
    <%- if !model.performer().nil? -%><%== render :template => 'reference', :locals => {name: 'performer', model: model.performer()} %><%- end -%>
    <%- if !model.status().nil? -%><status value="<%= model.status %>"<%- if model.has_primitive_extension?('status') -%>><%== model.get_primitive_extension('status').to_xml(is_root: false, is_lowercase: true)  %></status><%- else -%>/><%- end -%><%- end -%>
    <%- if (!model.notes().nil? && !model.notes.empty?) -%><%- model.notes().each do |element| -%><%== render :template => 'annotation', :locals => {name: 'notes', model: element} %><%- end -%><%- end -%>
    <%- if !model.asNeededBoolean().nil? -%><asNeededBoolean value="<%= model.asNeededBoolean %>"<%- if model.has_primitive_extension?('asNeededBoolean') -%>><%== model.get_primitive_extension('asNeededBoolean').to_xml(is_root: false, is_lowercase: true)  %></asNeededBoolean><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.asNeededCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'asNeededCodeableConcept', model: model.asNeededCodeableConcept()} %><%- end -%>
    <%- if !model.orderedOn.nil? -%><%- if (!model.orderedOn.match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><orderedOn value="<%= model.orderedOn %>"<%- if model.has_primitive_extension?('orderedOn') -%>><%== model.get_primitive_extension('orderedOn').to_xml(is_root: false, is_lowercase: true)  %></orderedOn><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.orderer().nil? -%><%== render :template => 'reference', :locals => {name: 'orderer', model: model.orderer()} %><%- end -%>
    <%- if !model.priority().nil? -%><priority value="<%= model.priority %>"<%- if model.has_primitive_extension?('priority') -%>><%== model.get_primitive_extension('priority').to_xml(is_root: false, is_lowercase: true)  %></priority><%- else -%>/><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
