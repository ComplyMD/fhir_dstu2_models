<<%= (is_lowercase) ? name.downcase : name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if !model.additionalInstructions().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'additionalInstructions', model: model.additionalInstructions()} %><%- end -%>
    <%- if !model.scheduleDateTime().nil? -%><%- if (!model.scheduleDateTime().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><scheduleDateTime value="<%= model.scheduleDateTime %>"/><%- end -%><%- end -%>
    <%- if !model.schedulePeriod().nil? -%><%== render :template => 'period', :locals => {name: 'schedulePeriod', model: model.schedulePeriod()} %><%- end -%>
    <%- if !model.scheduleTiming().nil? -%><%== render :template => 'timing', :locals => {name: 'scheduleTiming', model: model.scheduleTiming()} %><%- end -%>
    <%- if !model.asNeededBoolean().nil? -%><asNeededBoolean value="<%= model.asNeededBoolean() %>"/><%- end -%>
    <%- if !model.asNeededCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'asNeededCodeableConcept', model: model.asNeededCodeableConcept()} %><%- end -%>
    <%- if !model.site().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'site', model: model.site()} %><%- end -%>
    <%- if !model.route().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'route', model: model.route()} %><%- end -%>
    <%- if !model.method().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'method', model: model.method()} %><%- end -%>
    <%- if !model.doseRange().nil? -%><%== render :template => 'range', :locals => {name: 'doseRange', model: model.doseRange()} %><%- end -%>
    <%- if !model.doseQuantity().nil? -%><%== render :template => 'quantity', :locals => {name: 'doseQuantity', model: model.doseQuantity()} %><%- end -%>
    <%- if !model.rate().nil? -%><%== render :template => 'ratio', :locals => {name: 'rate', model: model.rate()} %><%- end -%>
    <%- if !model.maxDosePerPeriod().nil? -%><%== render :template => 'ratio', :locals => {name: 'maxDosePerPeriod', model: model.maxDosePerPeriod()} %><%- end -%>
</<%= (is_lowercase) ? name.downcase : name %>>
