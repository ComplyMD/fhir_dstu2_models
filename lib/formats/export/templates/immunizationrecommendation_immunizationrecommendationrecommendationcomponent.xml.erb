<<%= (is_lowercase) ? name.downcase : name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if !model.date().nil? -%><%- if (!model.date().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><date value="<%= model.date %>"/><%- end -%><%- end -%>
    <%- if !model.vaccineType().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'vaccineType', model: model.vaccineType()} %><%- end -%>
    <%- if !model.doseNumber().nil? -%><doseNumber value="<%= model.doseNumber() %>"/><%- end -%>
    <%- if !model.forecastStatus().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'forecastStatus', model: model.forecastStatus()} %><%- end -%>
    <%- if (!model.dateCriterion().nil? && !model.dateCriterion.empty?) -%><%- model.dateCriterion().each do |element| -%><%== render :template => 'immunizationrecommendation_immunizationrecommendationrecommendationdatecriterioncomponent', :locals => {name: 'dateCriterion', model: element} %><%- end -%><%- end -%>
    <%- if !model.protocol().nil? -%><%== render :template => 'immunizationrecommendation_immunizationrecommendationrecommendationprotocolcomponent', :locals => {name: 'protocol', model: model.protocol()} %><%- end -%>
    <%- if (!model.supportingImmunization().nil? && !model.supportingImmunization.empty?) -%><%- model.supportingImmunization().each do |element| -%><%== render :template => 'reference', :locals => {name: 'supportingImmunization', model: element} %><%- end -%><%- end -%>
    <%- if (!model.supportingPatientInformation().nil? && !model.supportingPatientInformation.empty?) -%><%- model.supportingPatientInformation().each do |element| -%><%== render :template => 'reference', :locals => {name: 'supportingPatientInformation', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? name.downcase : name %>>
