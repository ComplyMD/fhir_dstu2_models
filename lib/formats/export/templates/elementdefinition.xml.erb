<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'ElementDefinition' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if !model.path().nil? -%><path value="<%= model.path %>"<%- if model.has_primitive_extension?('path') -%>><%== model.get_primitive_extension('path').to_xml(is_root: false, is_lowercase: true)  %></path><%- else -%>/><%- end -%><%- end -%>
    <%- if (model.representation && !model.representation.empty?) -%><%- model.representation.each_with_index do |element,index| -%><representation value="<%= element %>"<%- if model.has_primitive_extension?('representation',index) -%>><%== model.get_primitive_extension('representation',index).to_xml(is_root: false, is_lowercase: true)  %></representation><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.name().nil? -%><name value="<%= model.name %>"<%- if model.has_primitive_extension?('name') -%>><%== model.get_primitive_extension('name').to_xml(is_root: false, is_lowercase: true)  %></name><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.label().nil? -%><label value="<%= model.label %>"<%- if model.has_primitive_extension?('label') -%>><%== model.get_primitive_extension('label').to_xml(is_root: false, is_lowercase: true)  %></label><%- else -%>/><%- end -%><%- end -%>
    <%- if (!model.code().nil? && !model.code.empty?) -%><%- model.code().each do |element| -%><%== render :template => 'coding', :locals => {name: 'code', model: element} %><%- end -%><%- end -%>
    <%- if !model.slicing().nil? -%><%== render :template => 'elementdefinition_elementdefinitionslicingcomponent', :locals => {name: 'slicing', model: model.slicing()} %><%- end -%>
    <%- if !model.short().nil? -%><short value="<%= model.short %>"<%- if model.has_primitive_extension?('short') -%>><%== model.get_primitive_extension('short').to_xml(is_root: false, is_lowercase: true)  %></short><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.definition().nil? -%><definition value="<%= model.definition %>"<%- if model.has_primitive_extension?('definition') -%>><%== model.get_primitive_extension('definition').to_xml(is_root: false, is_lowercase: true)  %></definition><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.comments().nil? -%><comments value="<%= model.comments %>"<%- if model.has_primitive_extension?('comments') -%>><%== model.get_primitive_extension('comments').to_xml(is_root: false, is_lowercase: true)  %></comments><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.requirements().nil? -%><requirements value="<%= model.requirements %>"<%- if model.has_primitive_extension?('requirements') -%>><%== model.get_primitive_extension('requirements').to_xml(is_root: false, is_lowercase: true)  %></requirements><%- else -%>/><%- end -%><%- end -%>
    <%- if (model.alias && !model.alias.empty?) -%><%- model.alias.each_with_index do |element,index| -%><alias value="<%= element %>"<%- if model.has_primitive_extension?('alias',index) -%>><%== model.get_primitive_extension('alias',index).to_xml(is_root: false, is_lowercase: true)  %></alias><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.min().nil? -%><min value="<%= model.min %>"<%- if model.has_primitive_extension?('min') -%>><%== model.get_primitive_extension('min').to_xml(is_root: false, is_lowercase: true)  %></min><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.max().nil? -%><max value="<%= model.max %>"<%- if model.has_primitive_extension?('max') -%>><%== model.get_primitive_extension('max').to_xml(is_root: false, is_lowercase: true)  %></max><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.base().nil? -%><%== render :template => 'elementdefinition_elementdefinitionbasecomponent', :locals => {name: 'base', model: model.base()} %><%- end -%>
    <%- if (!model.fhirType().nil? && !model.fhirType.empty?) -%><%- model.fhirType().each do |element| -%><%== render :template => 'elementdefinition_typerefcomponent', :locals => {name: 'type', model: element} %><%- end -%><%- end -%>
    <%- if !model.nameReference().nil? -%><nameReference value="<%= model.nameReference %>"<%- if model.has_primitive_extension?('nameReference') -%>><%== model.get_primitive_extension('nameReference').to_xml(is_root: false, is_lowercase: true)  %></nameReference><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.defaultValue.nil? -%><%- if (FHIR::AnyType::PRIMITIVES.any?{|x|x.downcase == model.defaultValue.type.downcase}) || (FHIR::AnyType::DATE_TIMES.any?{|x|x.downcase == model.defaultValue.type.downcase}) -%><%- if model.defaultValue.value.is_a?(Hash) -%><defaultValue<%= model.defaultValue.type %> value="<%= model.defaultValue.value[:value] %>"<%- if model.has_primitive_extension?('defaultValue') -%>><%- model.get_primitive_extension('defaultValue').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></defaultValue<%= model.defaultValue.type %>><%- else -%>/><%- end -%><%- else -%><defaultValue<%= model.defaultValue.type %> value="<%= model.defaultValue.value %>"<%- if model.has_primitive_extension?('defaultValue') -%>><%- model.get_primitive_extension('defaultValue').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></defaultValue<%= model.defaultValue.type %>><%- else -%>/><%- end -%><%- end -%><%- else -%><%- if model.defaultValue.value.is_a?(Hash) -%><%== model.defaultValue.value[:value].to_xml(is_root: false, name: "defaultValue#{model.defaultValue.type}")%><%- else -%><%== model.defaultValue.value.to_xml(is_root: false, name: "defaultValue#{model.defaultValue.type}")%><%- end -%><%- end -%><%- end -%>
    <%- if !model.meaningWhenMissing().nil? -%><meaningWhenMissing value="<%= model.meaningWhenMissing %>"<%- if model.has_primitive_extension?('meaningWhenMissing') -%>><%== model.get_primitive_extension('meaningWhenMissing').to_xml(is_root: false, is_lowercase: true)  %></meaningWhenMissing><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.fixed.nil? -%><%- if (FHIR::AnyType::PRIMITIVES.any?{|x|x.downcase == model.fixed.type.downcase}) || (FHIR::AnyType::DATE_TIMES.any?{|x|x.downcase == model.fixed.type.downcase}) -%><%- if model.fixed.value.is_a?(Hash) -%><fixed<%= model.fixed.type %> value="<%= model.fixed.value[:value] %>"<%- if model.has_primitive_extension?('fixed') -%>><%- model.get_primitive_extension('fixed').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></fixed<%= model.fixed.type %>><%- else -%>/><%- end -%><%- else -%><fixed<%= model.fixed.type %> value="<%= model.fixed.value %>"<%- if model.has_primitive_extension?('fixed') -%>><%- model.get_primitive_extension('fixed').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></fixed<%= model.fixed.type %>><%- else -%>/><%- end -%><%- end -%><%- else -%><%- if model.fixed.value.is_a?(Hash) -%><%== model.fixed.value[:value].to_xml(is_root: false, name: "fixed#{model.fixed.type}")%><%- else -%><%== model.fixed.value.to_xml(is_root: false, name: "fixed#{model.fixed.type}")%><%- end -%><%- end -%><%- end -%>
    <%- if !model.pattern.nil? -%><%- if (FHIR::AnyType::PRIMITIVES.any?{|x|x.downcase == model.pattern.type.downcase}) || (FHIR::AnyType::DATE_TIMES.any?{|x|x.downcase == model.pattern.type.downcase}) -%><%- if model.pattern.value.is_a?(Hash) -%><pattern<%= model.pattern.type %> value="<%= model.pattern.value[:value] %>"<%- if model.has_primitive_extension?('pattern') -%>><%- model.get_primitive_extension('pattern').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></pattern<%= model.pattern.type %>><%- else -%>/><%- end -%><%- else -%><pattern<%= model.pattern.type %> value="<%= model.pattern.value %>"<%- if model.has_primitive_extension?('pattern') -%>><%- model.get_primitive_extension('pattern').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></pattern<%= model.pattern.type %>><%- else -%>/><%- end -%><%- end -%><%- else -%><%- if model.pattern.value.is_a?(Hash) -%><%== model.pattern.value[:value].to_xml(is_root: false, name: "pattern#{model.pattern.type}")%><%- else -%><%== model.pattern.value.to_xml(is_root: false, name: "pattern#{model.pattern.type}")%><%- end -%><%- end -%><%- end -%>
    <%- if !model.example.nil? -%><%- if (FHIR::AnyType::PRIMITIVES.any?{|x|x.downcase == model.example.type.downcase}) || (FHIR::AnyType::DATE_TIMES.any?{|x|x.downcase == model.example.type.downcase}) -%><%- if model.example.value.is_a?(Hash) -%><example<%= model.example.type %> value="<%= model.example.value[:value] %>"<%- if model.has_primitive_extension?('example') -%>><%- model.get_primitive_extension('example').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></example<%= model.example.type %>><%- else -%>/><%- end -%><%- else -%><example<%= model.example.type %> value="<%= model.example.value %>"<%- if model.has_primitive_extension?('example') -%>><%- model.get_primitive_extension('example').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></example<%= model.example.type %>><%- else -%>/><%- end -%><%- end -%><%- else -%><%- if model.example.value.is_a?(Hash) -%><%== model.example.value[:value].to_xml(is_root: false, name: "example#{model.example.type}")%><%- else -%><%== model.example.value.to_xml(is_root: false, name: "example#{model.example.type}")%><%- end -%><%- end -%><%- end -%>
    <%- if !model.minValue.nil? -%><%- if (FHIR::AnyType::PRIMITIVES.any?{|x|x.downcase == model.minValue.type.downcase}) || (FHIR::AnyType::DATE_TIMES.any?{|x|x.downcase == model.minValue.type.downcase}) -%><%- if model.minValue.value.is_a?(Hash) -%><minValue<%= model.minValue.type %> value="<%= model.minValue.value[:value] %>"<%- if model.has_primitive_extension?('minValue') -%>><%- model.get_primitive_extension('minValue').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></minValue<%= model.minValue.type %>><%- else -%>/><%- end -%><%- else -%><minValue<%= model.minValue.type %> value="<%= model.minValue.value %>"<%- if model.has_primitive_extension?('minValue') -%>><%- model.get_primitive_extension('minValue').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></minValue<%= model.minValue.type %>><%- else -%>/><%- end -%><%- end -%><%- else -%><%- if model.minValue.value.is_a?(Hash) -%><%== model.minValue.value[:value].to_xml(is_root: false, name: "minValue#{model.minValue.type}")%><%- else -%><%== model.minValue.value.to_xml(is_root: false, name: "minValue#{model.minValue.type}")%><%- end -%><%- end -%><%- end -%>
    <%- if !model.maxValue.nil? -%><%- if (FHIR::AnyType::PRIMITIVES.any?{|x|x.downcase == model.maxValue.type.downcase}) || (FHIR::AnyType::DATE_TIMES.any?{|x|x.downcase == model.maxValue.type.downcase}) -%><%- if model.maxValue.value.is_a?(Hash) -%><maxValue<%= model.maxValue.type %> value="<%= model.maxValue.value[:value] %>"<%- if model.has_primitive_extension?('maxValue') -%>><%- model.get_primitive_extension('maxValue').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></maxValue<%= model.maxValue.type %>><%- else -%>/><%- end -%><%- else -%><maxValue<%= model.maxValue.type %> value="<%= model.maxValue.value %>"<%- if model.has_primitive_extension?('maxValue') -%>><%- model.get_primitive_extension('maxValue').each do |e| -%><%== e.to_xml(is_root: false, is_lowercase: true)  %><%- end -%></maxValue<%= model.maxValue.type %>><%- else -%>/><%- end -%><%- end -%><%- else -%><%- if model.maxValue.value.is_a?(Hash) -%><%== model.maxValue.value[:value].to_xml(is_root: false, name: "maxValue#{model.maxValue.type}")%><%- else -%><%== model.maxValue.value.to_xml(is_root: false, name: "maxValue#{model.maxValue.type}")%><%- end -%><%- end -%><%- end -%>
    <%- if !model.maxLength().nil? -%><maxLength value="<%= model.maxLength %>"<%- if model.has_primitive_extension?('maxLength') -%>><%== model.get_primitive_extension('maxLength').to_xml(is_root: false, is_lowercase: true)  %></maxLength><%- else -%>/><%- end -%><%- end -%>
    <%- if (model.condition && !model.condition.empty?) -%><%- model.condition.each_with_index do |element,index| -%><condition value="<%= element %>"<%- if model.has_primitive_extension?('condition',index) -%>><%== model.get_primitive_extension('condition',index).to_xml(is_root: false, is_lowercase: true)  %></condition><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if (!model.constraint().nil? && !model.constraint.empty?) -%><%- model.constraint().each do |element| -%><%== render :template => 'elementdefinition_elementdefinitionconstraintcomponent', :locals => {name: 'constraint', model: element} %><%- end -%><%- end -%>
    <%- if !model.mustSupport().nil? -%><mustSupport value="<%= model.mustSupport %>"<%- if model.has_primitive_extension?('mustSupport') -%>><%== model.get_primitive_extension('mustSupport').to_xml(is_root: false, is_lowercase: true)  %></mustSupport><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.isModifier().nil? -%><isModifier value="<%= model.isModifier %>"<%- if model.has_primitive_extension?('isModifier') -%>><%== model.get_primitive_extension('isModifier').to_xml(is_root: false, is_lowercase: true)  %></isModifier><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.isSummary().nil? -%><isSummary value="<%= model.isSummary %>"<%- if model.has_primitive_extension?('isSummary') -%>><%== model.get_primitive_extension('isSummary').to_xml(is_root: false, is_lowercase: true)  %></isSummary><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.binding().nil? -%><%== render :template => 'elementdefinition_elementdefinitionbindingcomponent', :locals => {name: 'binding', model: model.binding()} %><%- end -%>
    <%- if (!model.mapping().nil? && !model.mapping.empty?) -%><%- model.mapping().each do |element| -%><%== render :template => 'elementdefinition_elementdefinitionmappingcomponent', :locals => {name: 'mapping', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
