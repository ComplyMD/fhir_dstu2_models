<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'MedicationStatement' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if (!model.identifier().nil? && !model.identifier.empty?) -%><%- model.identifier().each do |element| -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: element} %><%- end -%><%- end -%>
    <%- if !model.patient().nil? -%><%== render :template => 'reference', :locals => {name: 'patient', model: model.patient()} %><%- end -%>
    <%- if !model.informationSource().nil? -%><%== render :template => 'reference', :locals => {name: 'informationSource', model: model.informationSource()} %><%- end -%>
    <%- if !model.dateAsserted().nil? -%><%- if (!model.dateAsserted().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><dateAsserted value="<%= model.dateAsserted %>"/><%- end -%><%- end -%>
    <%- if !model.status().nil? -%><status value="<%= model.status() %>"/><%- end -%>
    <%- if !model.wasNotGiven().nil? -%><wasNotGiven value="<%= model.wasNotGiven() %>"/><%- end -%>
    <%- if (!model.reasonNotGiven().nil? && !model.reasonNotGiven.empty?) -%><%- model.reasonNotGiven().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'reasonNotGiven', model: element} %><%- end -%><%- end -%>
    <%- if !model.reasonForUseCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'reasonForUseCodeableConcept', model: model.reasonForUseCodeableConcept()} %><%- end -%>
    <%- if !model.reasonForUseReference().nil? -%><%== render :template => 'reference', :locals => {name: 'reasonForUseReference', model: model.reasonForUseReference()} %><%- end -%>
    <%- if !model.effectiveDateTime().nil? -%><%- if (!model.effectiveDateTime().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><effectiveDateTime value="<%= model.effectiveDateTime %>"/><%- end -%><%- end -%>
    <%- if !model.effectivePeriod().nil? -%><%== render :template => 'period', :locals => {name: 'effectivePeriod', model: model.effectivePeriod()} %><%- end -%>
    <%- if !model.note().nil? -%><note value="<%= model.note() %>"/><%- end -%>
    <%- if !model.medication().nil? -%><%== render :template => 'reference', :locals => {name: 'medication', model: model.medication()} %><%- end -%>
    <%- if (!model.dosage().nil? && !model.dosage.empty?) -%><%- model.dosage().each do |element| -%><%== render :template => 'medicationstatement_medicationstatementdosagecomponent', :locals => {name: 'dosage', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
