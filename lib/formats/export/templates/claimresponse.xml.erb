<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'ClaimResponse' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if (!model.identifier().nil? && !model.identifier.empty?) -%><%- model.identifier().each do |element| -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: element} %><%- end -%><%- end -%>
    <%- if !model.request().nil? -%><%== render :template => 'reference', :locals => {name: 'request', model: model.request()} %><%- end -%>
    <%- if !model.ruleset().nil? -%><%== render :template => 'coding', :locals => {name: 'ruleset', model: model.ruleset()} %><%- end -%>
    <%- if !model.originalRuleset().nil? -%><%== render :template => 'coding', :locals => {name: 'originalRuleset', model: model.originalRuleset()} %><%- end -%>
    <%- if !model.created().nil? -%><created value="<%= model.created().iso8601 %>"/><%- end -%>
    <%- if !model.organization().nil? -%><%== render :template => 'reference', :locals => {name: 'organization', model: model.organization()} %><%- end -%>
    <%- if !model.requestProvider().nil? -%><%== render :template => 'reference', :locals => {name: 'requestProvider', model: model.requestProvider()} %><%- end -%>
    <%- if !model.requestOrganization().nil? -%><%== render :template => 'reference', :locals => {name: 'requestOrganization', model: model.requestOrganization()} %><%- end -%>
    <%- if !model.outcome().nil? -%><outcome value="<%= model.outcome() %>"/><%- end -%>
    <%- if !model.disposition().nil? -%><disposition value="<%= model.disposition() %>"/><%- end -%>
    <%- if !model.payeeType().nil? -%><%== render :template => 'coding', :locals => {name: 'payeeType', model: model.payeeType()} %><%- end -%>
    <%- if (!model.item().nil? && !model.item.empty?) -%><%- model.item().each do |element| -%><%== render :template => 'claimresponse_itemscomponent', :locals => {name: 'item', model: element} %><%- end -%><%- end -%>
    <%- if (!model.additem().nil? && !model.additem.empty?) -%><%- model.additem().each do |element| -%><%== render :template => 'claimresponse_addeditemcomponent', :locals => {name: 'additem', model: element} %><%- end -%><%- end -%>
    <%- if (!model.error().nil? && !model.error.empty?) -%><%- model.error().each do |element| -%><%== render :template => 'claimresponse_errorscomponent', :locals => {name: 'error', model: element} %><%- end -%><%- end -%>
    <%- if !model.totalCost().nil? -%><%== render :template => 'quantity', :locals => {name: 'totalCost', model: model.totalCost()} %><%- end -%>
    <%- if !model.unallocDeductable().nil? -%><%== render :template => 'quantity', :locals => {name: 'unallocDeductable', model: model.unallocDeductable()} %><%- end -%>
    <%- if !model.totalBenefit().nil? -%><%== render :template => 'quantity', :locals => {name: 'totalBenefit', model: model.totalBenefit()} %><%- end -%>
    <%- if !model.paymentAdjustment().nil? -%><%== render :template => 'quantity', :locals => {name: 'paymentAdjustment', model: model.paymentAdjustment()} %><%- end -%>
    <%- if !model.paymentAdjustmentReason().nil? -%><%== render :template => 'coding', :locals => {name: 'paymentAdjustmentReason', model: model.paymentAdjustmentReason()} %><%- end -%>
    <%- if !model.paymentDate().nil? -%><paymentDate value="<%= model.paymentDate().iso8601 %>"/><%- end -%>
    <%- if !model.paymentAmount().nil? -%><%== render :template => 'quantity', :locals => {name: 'paymentAmount', model: model.paymentAmount()} %><%- end -%>
    <%- if !model.paymentRef().nil? -%><%== render :template => 'identifier', :locals => {name: 'paymentRef', model: model.paymentRef()} %><%- end -%>
    <%- if !model.reserved().nil? -%><%== render :template => 'coding', :locals => {name: 'reserved', model: model.reserved()} %><%- end -%>
    <%- if !model.form().nil? -%><%== render :template => 'coding', :locals => {name: 'form', model: model.form()} %><%- end -%>
    <%- if (!model.note().nil? && !model.note.empty?) -%><%- model.note().each do |element| -%><%== render :template => 'claimresponse_notescomponent', :locals => {name: 'note', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
