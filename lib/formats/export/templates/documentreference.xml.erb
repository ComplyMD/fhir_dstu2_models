<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'DocumentReference' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if !model.masterIdentifier().nil? -%><%== render :template => 'identifier', :locals => {name: 'masterIdentifier', model: model.masterIdentifier()} %><%- end -%>
    <%- if (!model.identifier().nil? && !model.identifier.empty?) -%><%- model.identifier().each do |element| -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: element} %><%- end -%><%- end -%>
    <%- if !model.subject().nil? -%><%== render :template => 'reference', :locals => {name: 'subject', model: model.subject()} %><%- end -%>
    <%- if !model.fhirType().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'type', model: model.fhirType()} %><%- end -%>
    <%- if !model.fhirClass().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'class', model: model.fhirClass()} %><%- end -%>
    <%- if (!model.author().nil? && !model.author.empty?) -%><%- model.author().each do |element| -%><%== render :template => 'reference', :locals => {name: 'author', model: element} %><%- end -%><%- end -%>
    <%- if !model.custodian().nil? -%><%== render :template => 'reference', :locals => {name: 'custodian', model: model.custodian()} %><%- end -%>
    <%- if !model.authenticator().nil? -%><%== render :template => 'reference', :locals => {name: 'authenticator', model: model.authenticator()} %><%- end -%>
    <%- if !model.created.nil? -%><%- if (!model.created.match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><created value="<%= model.created %>"<%- if model.has_primitive_extension?('created') -%>><%== model.get_primitive_extension('created').to_xml(is_root: false, is_lowercase: true)  %></created><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.indexed.nil? -%><%- if (!model.indexed.match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))))\Z/).nil?) -%><indexed value="<%= model.indexed %>"<%- if model.has_primitive_extension?('indexed') -%>><%== model.get_primitive_extension('indexed').to_xml(is_root: false, is_lowercase: true)  %></indexed><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.status().nil? -%><status value="<%= model.status %>"<%- if model.has_primitive_extension?('status') -%>><%== model.get_primitive_extension('status').to_xml(is_root: false, is_lowercase: true)  %></status><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.docStatus().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'docStatus', model: model.docStatus()} %><%- end -%>
    <%- if (!model.relatesTo().nil? && !model.relatesTo.empty?) -%><%- model.relatesTo().each do |element| -%><%== render :template => 'documentreference_documentreferencerelatestocomponent', :locals => {name: 'relatesTo', model: element} %><%- end -%><%- end -%>
    <%- if !model.description().nil? -%><description value="<%= model.description %>"<%- if model.has_primitive_extension?('description') -%>><%== model.get_primitive_extension('description').to_xml(is_root: false, is_lowercase: true)  %></description><%- else -%>/><%- end -%><%- end -%>
    <%- if (!model.securityLabel().nil? && !model.securityLabel.empty?) -%><%- model.securityLabel().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'securityLabel', model: element} %><%- end -%><%- end -%>
    <%- if (!model.content().nil? && !model.content.empty?) -%><%- model.content().each do |element| -%><%== render :template => 'documentreference_documentreferencecontentcomponent', :locals => {name: 'content', model: element} %><%- end -%><%- end -%>
    <%- if !model.context().nil? -%><%== render :template => 'documentreference_documentreferencecontextcomponent', :locals => {name: 'context', model: model.context()} %><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
