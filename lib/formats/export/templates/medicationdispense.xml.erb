<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'MedicationDispense' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if !model.identifier().nil? -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: model.identifier()} %><%- end -%>
    <%- if !model.status().nil? -%><status value="<%= model.status %>"<%- if model.has_primitive_extension?('status') -%>><%== model.get_primitive_extension('status').to_xml(is_root: false, is_lowercase: true)  %></status><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.patient().nil? -%><%== render :template => 'reference', :locals => {name: 'patient', model: model.patient()} %><%- end -%>
    <%- if !model.dispenser().nil? -%><%== render :template => 'reference', :locals => {name: 'dispenser', model: model.dispenser()} %><%- end -%>
    <%- if (!model.authorizingPrescription().nil? && !model.authorizingPrescription.empty?) -%><%- model.authorizingPrescription().each do |element| -%><%== render :template => 'reference', :locals => {name: 'authorizingPrescription', model: element} %><%- end -%><%- end -%>
    <%- if !model.fhirType().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'type', model: model.fhirType()} %><%- end -%>
    <%- if !model.quantity().nil? -%><%== render :template => 'quantity', :locals => {name: 'quantity', model: model.quantity()} %><%- end -%>
    <%- if !model.daysSupply().nil? -%><%== render :template => 'quantity', :locals => {name: 'daysSupply', model: model.daysSupply()} %><%- end -%>
    <%- if !model.medicationCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'medicationCodeableConcept', model: model.medicationCodeableConcept()} %><%- end -%>
    <%- if !model.medicationReference().nil? -%><%== render :template => 'reference', :locals => {name: 'medicationReference', model: model.medicationReference()} %><%- end -%>
    <%- if !model.whenPrepared.nil? -%><%- if (!model.whenPrepared.match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><whenPrepared value="<%= model.whenPrepared %>"<%- if model.has_primitive_extension?('whenPrepared') -%>><%== model.get_primitive_extension('whenPrepared').to_xml(is_root: false, is_lowercase: true)  %></whenPrepared><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.whenHandedOver.nil? -%><%- if (!model.whenHandedOver.match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><whenHandedOver value="<%= model.whenHandedOver %>"<%- if model.has_primitive_extension?('whenHandedOver') -%>><%== model.get_primitive_extension('whenHandedOver').to_xml(is_root: false, is_lowercase: true)  %></whenHandedOver><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.destination().nil? -%><%== render :template => 'reference', :locals => {name: 'destination', model: model.destination()} %><%- end -%>
    <%- if (!model.receiver().nil? && !model.receiver.empty?) -%><%- model.receiver().each do |element| -%><%== render :template => 'reference', :locals => {name: 'receiver', model: element} %><%- end -%><%- end -%>
    <%- if !model.note().nil? -%><note value="<%= model.note %>"<%- if model.has_primitive_extension?('note') -%>><%== model.get_primitive_extension('note').to_xml(is_root: false, is_lowercase: true)  %></note><%- else -%>/><%- end -%><%- end -%>
    <%- if (!model.dosageInstruction().nil? && !model.dosageInstruction.empty?) -%><%- model.dosageInstruction().each do |element| -%><%== render :template => 'medicationdispense_medicationdispensedosageinstructioncomponent', :locals => {name: 'dosageInstruction', model: element} %><%- end -%><%- end -%>
    <%- if !model.substitution().nil? -%><%== render :template => 'medicationdispense_medicationdispensesubstitutioncomponent', :locals => {name: 'substitution', model: model.substitution()} %><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
