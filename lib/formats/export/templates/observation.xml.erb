<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'Observation' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if !model.code().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'code', model: model.code()} %><%- end -%>
    <%- if !model.valueQuantity().nil? -%><%== render :template => 'quantity', :locals => {name: 'valueQuantity', model: model.valueQuantity()} %><%- end -%>
    <%- if !model.valueCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'valueCodeableConcept', model: model.valueCodeableConcept()} %><%- end -%>
    <%- if !model.valueString().nil? -%><valueString value="<%= model.valueString() %>"/><%- end -%>
    <%- if !model.valueRange().nil? -%><%== render :template => 'range', :locals => {name: 'valueRange', model: model.valueRange()} %><%- end -%>
    <%- if !model.valueRatio().nil? -%><%== render :template => 'ratio', :locals => {name: 'valueRatio', model: model.valueRatio()} %><%- end -%>
    <%- if !model.valueSampledData().nil? -%><%== render :template => 'sampleddata', :locals => {name: 'valueSampledData', model: model.valueSampledData()} %><%- end -%>
    <%- if !model.valueAttachment().nil? -%><%== render :template => 'attachment', :locals => {name: 'valueAttachment', model: model.valueAttachment()} %><%- end -%>
    <%- if !model.valueTime().nil? -%><%- if (!model.valueTime().match(/\A([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?\Z/).nil?) -%><valueTime value="<%= model.valueTime %>"/><%- end -%><%- end -%>
    <%- if !model.valueDateTime().nil? -%><%- if (!model.valueDateTime().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><valueDateTime value="<%= model.valueDateTime %>"/><%- end -%><%- end -%>
    <%- if !model.valuePeriod().nil? -%><%== render :template => 'period', :locals => {name: 'valuePeriod', model: model.valuePeriod()} %><%- end -%>
    <%- if !model.dataAbsentReason().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'dataAbsentReason', model: model.dataAbsentReason()} %><%- end -%>
    <%- if !model.interpretation().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'interpretation', model: model.interpretation()} %><%- end -%>
    <%- if !model.comments().nil? -%><comments value="<%= model.comments() %>"/><%- end -%>
    <%- if !model.appliesDateTime().nil? -%><%- if (!model.appliesDateTime().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><appliesDateTime value="<%= model.appliesDateTime %>"/><%- end -%><%- end -%>
    <%- if !model.appliesPeriod().nil? -%><%== render :template => 'period', :locals => {name: 'appliesPeriod', model: model.appliesPeriod()} %><%- end -%>
    <%- if !model.issued().nil? -%><%- if (!model.issued().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))))\Z/).nil?) -%><issued value="<%= model.issued %>"/><%- end -%><%- end -%>
    <%- if !model.status().nil? -%><status value="<%= model.status() %>"/><%- end -%>
    <%- if !model.reliability().nil? -%><reliability value="<%= model.reliability() %>"/><%- end -%>
    <%- if !model.bodySiteCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'bodySiteCodeableConcept', model: model.bodySiteCodeableConcept()} %><%- end -%>
    <%- if !model.bodySiteReference().nil? -%><%== render :template => 'reference', :locals => {name: 'bodySiteReference', model: model.bodySiteReference()} %><%- end -%>
    <%- if !model.method().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'method', model: model.method()} %><%- end -%>
    <%- if (!model.identifier().nil? && !model.identifier.empty?) -%><%- model.identifier().each do |element| -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: element} %><%- end -%><%- end -%>
    <%- if !model.subject().nil? -%><%== render :template => 'reference', :locals => {name: 'subject', model: model.subject()} %><%- end -%>
    <%- if !model.specimen().nil? -%><%== render :template => 'reference', :locals => {name: 'specimen', model: model.specimen()} %><%- end -%>
    <%- if (!model.performer().nil? && !model.performer.empty?) -%><%- model.performer().each do |element| -%><%== render :template => 'reference', :locals => {name: 'performer', model: element} %><%- end -%><%- end -%>
    <%- if !model.device().nil? -%><%== render :template => 'reference', :locals => {name: 'device', model: model.device()} %><%- end -%>
    <%- if !model.encounter().nil? -%><%== render :template => 'reference', :locals => {name: 'encounter', model: model.encounter()} %><%- end -%>
    <%- if (!model.referenceRange().nil? && !model.referenceRange.empty?) -%><%- model.referenceRange().each do |element| -%><%== render :template => 'observation_observationreferencerangecomponent', :locals => {name: 'referenceRange', model: element} %><%- end -%><%- end -%>
    <%- if (!model.related().nil? && !model.related.empty?) -%><%- model.related().each do |element| -%><%== render :template => 'observation_observationrelatedcomponent', :locals => {name: 'related', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
