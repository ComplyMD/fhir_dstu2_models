<<%= (is_lowercase) ? name.downcase : name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if !model.identifier().nil? -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: model.identifier()} %><%- end -%>
    <%- if !model.status().nil? -%><status value="<%= model.status() %>"/><%- end -%>
    <%- if !model.fhirType().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'type', model: model.fhirType()} %><%- end -%>
    <%- if !model.quantity().nil? -%><%== render :template => 'quantity', :locals => {name: 'quantity', model: model.quantity()} %><%- end -%>
    <%- if !model.suppliedItem().nil? -%><%== render :template => 'reference', :locals => {name: 'suppliedItem', model: model.suppliedItem()} %><%- end -%>
    <%- if !model.supplier().nil? -%><%== render :template => 'reference', :locals => {name: 'supplier', model: model.supplier()} %><%- end -%>
    <%- if !model.whenPrepared().nil? -%><%== render :template => 'period', :locals => {name: 'whenPrepared', model: model.whenPrepared()} %><%- end -%>
    <%- if !model.whenHandedOver().nil? -%><%- if (!model.whenHandedOver().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><whenHandedOver value="<%= model.whenHandedOver %>"/><%- end -%><%- end -%>
    <%- if !model.destination().nil? -%><%== render :template => 'reference', :locals => {name: 'destination', model: model.destination()} %><%- end -%>
    <%- if (!model.receiver().nil? && !model.receiver.empty?) -%><%- model.receiver().each do |element| -%><%== render :template => 'reference', :locals => {name: 'receiver', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? name.downcase : name %>>
