<<%= (is_lowercase) ? name.downcase : name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if !model.entityCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'entityCodeableConcept', model: model.entityCodeableConcept()} %><%- end -%>
    <%- if !model.entityReference().nil? -%><%== render :template => 'reference', :locals => {name: 'entityReference', model: model.entityReference()} %><%- end -%>
    <%- if !model.identifier().nil? -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: model.identifier()} %><%- end -%>
    <%- if !model.effectiveTime.nil? -%><%- if (!model.effectiveTime.match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><effectiveTime value="<%= model.effectiveTime %>"<%- if model.has_primitive_extension?('effectiveTime') -%>><%== model.get_primitive_extension('effectiveTime').to_xml(is_root: false, is_lowercase: true)  %></effectiveTime><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.quantity().nil? -%><%== render :template => 'quantity', :locals => {name: 'quantity', model: model.quantity()} %><%- end -%>
    <%- if !model.unitPrice().nil? -%><%== render :template => 'quantity', :locals => {name: 'unitPrice', model: model.unitPrice()} %><%- end -%>
    <%- if !model.factor().nil? -%><factor value="<%= model.factor %>"<%- if model.has_primitive_extension?('factor') -%>><%== model.get_primitive_extension('factor').to_xml(is_root: false, is_lowercase: true)  %></factor><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.points().nil? -%><points value="<%= model.points %>"<%- if model.has_primitive_extension?('points') -%>><%== model.get_primitive_extension('points').to_xml(is_root: false, is_lowercase: true)  %></points><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.net().nil? -%><%== render :template => 'quantity', :locals => {name: 'net', model: model.net()} %><%- end -%>
</<%= (is_lowercase) ? name.downcase : name %>>
