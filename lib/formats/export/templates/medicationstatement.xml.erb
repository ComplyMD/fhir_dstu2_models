<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'MedicationStatement' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if (!model.identifier().nil? && !model.identifier.empty?) -%><%- model.identifier().each do |element| -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: element} %><%- end -%><%- end -%>
    <%- if !model.patient().nil? -%><%== render :template => 'reference', :locals => {name: 'patient', model: model.patient()} %><%- end -%>
    <%- if !model.informationSource().nil? -%><%== render :template => 'reference', :locals => {name: 'informationSource', model: model.informationSource()} %><%- end -%>
    <%- if !model.dateAsserted.nil? -%><%- if (!model.dateAsserted.match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><dateAsserted value="<%= model.dateAsserted %>"<%- if model.has_primitive_extension?('dateAsserted') -%>><%== model.get_primitive_extension('dateAsserted').to_xml(is_root: false, is_lowercase: true)  %></dateAsserted><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.status().nil? -%><status value="<%= model.status %>"<%- if model.has_primitive_extension?('status') -%>><%== model.get_primitive_extension('status').to_xml(is_root: false, is_lowercase: true)  %></status><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.wasNotTaken().nil? -%><wasNotTaken value="<%= model.wasNotTaken %>"<%- if model.has_primitive_extension?('wasNotTaken') -%>><%== model.get_primitive_extension('wasNotTaken').to_xml(is_root: false, is_lowercase: true)  %></wasNotTaken><%- else -%>/><%- end -%><%- end -%>
    <%- if (!model.reasonNotTaken().nil? && !model.reasonNotTaken.empty?) -%><%- model.reasonNotTaken().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'reasonNotTaken', model: element} %><%- end -%><%- end -%>
    <%- if !model.reasonForUseCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'reasonForUseCodeableConcept', model: model.reasonForUseCodeableConcept()} %><%- end -%>
    <%- if !model.reasonForUseReference().nil? -%><%== render :template => 'reference', :locals => {name: 'reasonForUseReference', model: model.reasonForUseReference()} %><%- end -%>
    <%- if !model.effectiveDateTime.nil? -%><%- if (!model.effectiveDateTime.match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><effectiveDateTime value="<%= model.effectiveDateTime %>"<%- if model.has_primitive_extension?('effectiveDateTime') -%>><%== model.get_primitive_extension('effectiveDateTime').to_xml(is_root: false, is_lowercase: true)  %></effectiveDateTime><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.effectivePeriod().nil? -%><%== render :template => 'period', :locals => {name: 'effectivePeriod', model: model.effectivePeriod()} %><%- end -%>
    <%- if !model.note().nil? -%><note value="<%= model.note %>"<%- if model.has_primitive_extension?('note') -%>><%== model.get_primitive_extension('note').to_xml(is_root: false, is_lowercase: true)  %></note><%- else -%>/><%- end -%><%- end -%>
    <%- if (!model.supportingInformation().nil? && !model.supportingInformation.empty?) -%><%- model.supportingInformation().each do |element| -%><%== render :template => 'reference', :locals => {name: 'supportingInformation', model: element} %><%- end -%><%- end -%>
    <%- if !model.medicationCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'medicationCodeableConcept', model: model.medicationCodeableConcept()} %><%- end -%>
    <%- if !model.medicationReference().nil? -%><%== render :template => 'reference', :locals => {name: 'medicationReference', model: model.medicationReference()} %><%- end -%>
    <%- if (!model.dosage().nil? && !model.dosage.empty?) -%><%- model.dosage().each do |element| -%><%== render :template => 'medicationstatement_medicationstatementdosagecomponent', :locals => {name: 'dosage', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
