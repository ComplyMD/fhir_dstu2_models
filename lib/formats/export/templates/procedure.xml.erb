<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'Procedure' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if (!model.identifier().nil? && !model.identifier.empty?) -%><%- model.identifier().each do |element| -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: element} %><%- end -%><%- end -%>
    <%- if !model.patient().nil? -%><%== render :template => 'reference', :locals => {name: 'patient', model: model.patient()} %><%- end -%>
    <%- if !model.status().nil? -%><status value="<%= model.status() %>"/><%- end -%>
    <%- if !model.category().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'category', model: model.category()} %><%- end -%>
    <%- if !model.fhirType().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'type', model: model.fhirType()} %><%- end -%>
    <%- if (!model.bodySite().nil? && !model.bodySite.empty?) -%><%- model.bodySite().each do |element| -%><%== render :template => 'procedure_procedurebodysitecomponent', :locals => {name: 'bodySite', model: element} %><%- end -%><%- end -%>
    <%- if (!model.indication().nil? && !model.indication.empty?) -%><%- model.indication().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'indication', model: element} %><%- end -%><%- end -%>
    <%- if (!model.performer().nil? && !model.performer.empty?) -%><%- model.performer().each do |element| -%><%== render :template => 'procedure_procedureperformercomponent', :locals => {name: 'performer', model: element} %><%- end -%><%- end -%>
    <%- if !model.performedDateTime().nil? -%><%- if (!model.performedDateTime().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?\Z/).nil?) -%><performedDateTime value="<%= model.performedDateTime %>"/><%- end -%><%- end -%>
    <%- if !model.performedPeriod().nil? -%><%== render :template => 'period', :locals => {name: 'performedPeriod', model: model.performedPeriod()} %><%- end -%>
    <%- if !model.encounter().nil? -%><%== render :template => 'reference', :locals => {name: 'encounter', model: model.encounter()} %><%- end -%>
    <%- if !model.location().nil? -%><%== render :template => 'reference', :locals => {name: 'location', model: model.location()} %><%- end -%>
    <%- if !model.outcome().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'outcome', model: model.outcome()} %><%- end -%>
    <%- if (!model.report().nil? && !model.report.empty?) -%><%- model.report().each do |element| -%><%== render :template => 'reference', :locals => {name: 'report', model: element} %><%- end -%><%- end -%>
    <%- if (!model.complication().nil? && !model.complication.empty?) -%><%- model.complication().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'complication', model: element} %><%- end -%><%- end -%>
    <%- if (!model.followUp().nil? && !model.followUp.empty?) -%><%- model.followUp().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'followUp', model: element} %><%- end -%><%- end -%>
    <%- if (!model.relatedItem().nil? && !model.relatedItem.empty?) -%><%- model.relatedItem().each do |element| -%><%== render :template => 'procedure_procedurerelateditemcomponent', :locals => {name: 'relatedItem', model: element} %><%- end -%><%- end -%>
    <%- if !model.notes().nil? -%><notes value="<%= model.notes() %>"/><%- end -%>
    <%- if (!model.device().nil? && !model.device.empty?) -%><%- model.device().each do |element| -%><%== render :template => 'procedure_proceduredevicecomponent', :locals => {name: 'device', model: element} %><%- end -%><%- end -%>
    <%- if (!model.used().nil? && !model.used.empty?) -%><%- model.used().each do |element| -%><%== render :template => 'reference', :locals => {name: 'used', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
