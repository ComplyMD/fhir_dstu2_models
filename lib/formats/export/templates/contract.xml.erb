<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'Contract' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if !model.identifier().nil? -%><%== render :template => 'identifier', :locals => {name: 'identifier', model: model.identifier()} %><%- end -%>
    <%- if !model.issued().nil? -%><issued value="<%= model.issued().iso8601 %>"/><%- end -%>
    <%- if !model.applies().nil? -%><%== render :template => 'period', :locals => {name: 'applies', model: model.applies()} %><%- end -%>
    <%- if (!model.subject().nil? && !model.subject.empty?) -%><%- model.subject().each do |element| -%><%== render :template => 'reference', :locals => {name: 'subject', model: element} %><%- end -%><%- end -%>
    <%- if (!model.authority().nil? && !model.authority.empty?) -%><%- model.authority().each do |element| -%><%== render :template => 'reference', :locals => {name: 'authority', model: element} %><%- end -%><%- end -%>
    <%- if (!model.domain().nil? && !model.domain.empty?) -%><%- model.domain().each do |element| -%><%== render :template => 'reference', :locals => {name: 'domain', model: element} %><%- end -%><%- end -%>
    <%- if !model.fhirType().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'type', model: model.fhirType()} %><%- end -%>
    <%- if (!model.subType().nil? && !model.subType.empty?) -%><%- model.subType().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'subType', model: element} %><%- end -%><%- end -%>
    <%- if (!model.action().nil? && !model.action.empty?) -%><%- model.action().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'action', model: element} %><%- end -%><%- end -%>
    <%- if (!model.actionReason().nil? && !model.actionReason.empty?) -%><%- model.actionReason().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'actionReason', model: element} %><%- end -%><%- end -%>
    <%- if (!model.actor().nil? && !model.actor.empty?) -%><%- model.actor().each do |element| -%><%== render :template => 'contract_actorcomponent', :locals => {name: 'actor', model: element} %><%- end -%><%- end -%>
    <%- if (!model.valuedItem().nil? && !model.valuedItem.empty?) -%><%- model.valuedItem().each do |element| -%><%== render :template => 'contract_valueditemcomponent', :locals => {name: 'valuedItem', model: element} %><%- end -%><%- end -%>
    <%- if (!model.signer().nil? && !model.signer.empty?) -%><%- model.signer().each do |element| -%><%== render :template => 'contract_signatorycomponent', :locals => {name: 'signer', model: element} %><%- end -%><%- end -%>
    <%- if (!model.term().nil? && !model.term.empty?) -%><%- model.term().each do |element| -%><%== render :template => 'contract_termcomponent', :locals => {name: 'term', model: element} %><%- end -%><%- end -%>
    <%- if !model.bindingAttachment().nil? -%><%== render :template => 'attachment', :locals => {name: 'bindingAttachment', model: model.bindingAttachment()} %><%- end -%>
    <%- if !model.bindingReference().nil? -%><%== render :template => 'reference', :locals => {name: 'bindingReference', model: model.bindingReference()} %><%- end -%>
    <%- if (!model.friendly().nil? && !model.friendly.empty?) -%><%- model.friendly().each do |element| -%><%== render :template => 'contract_friendlylanguagecomponent', :locals => {name: 'friendly', model: element} %><%- end -%><%- end -%>
    <%- if (!model.legal().nil? && !model.legal.empty?) -%><%- model.legal().each do |element| -%><%== render :template => 'contract_legallanguagecomponent', :locals => {name: 'legal', model: element} %><%- end -%><%- end -%>
    <%- if (!model.rule().nil? && !model.rule.empty?) -%><%- model.rule().each do |element| -%><%== render :template => 'contract_computablelanguagecomponent', :locals => {name: 'rule', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
