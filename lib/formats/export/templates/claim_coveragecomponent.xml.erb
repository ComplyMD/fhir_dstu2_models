<<%= (is_lowercase) ? name.downcase : name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if !model.sequence().nil? -%><%== render :template => 'positiveint', :locals => {name: 'sequence', model: model.sequence()} %><%- end -%>
    <%- if !model.focal().nil? -%><focal value="<%= model.focal() %>"/><%- end -%>
    <%- if !model.coverage().nil? -%><%== render :template => 'reference', :locals => {name: 'coverage', model: model.coverage()} %><%- end -%>
    <%- if !model.businessArrangement().nil? -%><businessArrangement value="<%= model.businessArrangement() %>"/><%- end -%>
    <%- if !model.relationship().nil? -%><%== render :template => 'coding', :locals => {name: 'relationship', model: model.relationship()} %><%- end -%>
    <%- if (model.preAuthRef() && !model.preAuthRef.empty?) -%><%- model.preAuthRef().each do |element| -%><preAuthRef value="<%= element %>"/><%- end -%><%- end -%>
    <%- if !model.claimResponse().nil? -%><%== render :template => 'reference', :locals => {name: 'claimResponse', model: model.claimResponse()} %><%- end -%>
    <%- if !model.originalRuleset().nil? -%><%== render :template => 'coding', :locals => {name: 'originalRuleset', model: model.originalRuleset()} %><%- end -%>
</<%= (is_lowercase) ? name.downcase : name %>>
