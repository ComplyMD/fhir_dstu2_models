<<%= (is_lowercase) ? name.downcase : name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if (!model.role().nil? && !model.role.empty?) -%><%- model.role().each do |element| -%><%== render :template => 'codeableconcept', :locals => {name: 'role', model: element} %><%- end -%><%- end -%>
    <%- if !model.reference().nil? -%><%== render :template => 'reference', :locals => {name: 'reference', model: model.reference()} %><%- end -%>
    <%- if !model.userId().nil? -%><%== render :template => 'identifier', :locals => {name: 'userId', model: model.userId()} %><%- end -%>
    <%- if !model.altId().nil? -%><altId value="<%= model.altId %>"<%- if model.has_primitive_extension?('altId') -%>><%== model.get_primitive_extension('altId').to_xml(is_root: false, is_lowercase: true)  %></altId><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.name().nil? -%><name value="<%= model.name %>"<%- if model.has_primitive_extension?('name') -%>><%== model.get_primitive_extension('name').to_xml(is_root: false, is_lowercase: true)  %></name><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.requestor().nil? -%><requestor value="<%= model.requestor %>"<%- if model.has_primitive_extension?('requestor') -%>><%== model.get_primitive_extension('requestor').to_xml(is_root: false, is_lowercase: true)  %></requestor><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.location().nil? -%><%== render :template => 'reference', :locals => {name: 'location', model: model.location()} %><%- end -%>
    <%- if (model.policy && !model.policy.empty?) -%><%- model.policy.each_with_index do |element,index| -%><policy value="<%= element %>"<%- if model.has_primitive_extension?('policy',index) -%>><%== model.get_primitive_extension('policy',index).to_xml(is_root: false, is_lowercase: true)  %></policy><%- else -%>/><%- end -%><%- end -%><%- end -%>
    <%- if !model.media().nil? -%><%== render :template => 'coding', :locals => {name: 'media', model: model.media()} %><%- end -%>
    <%- if !model.network().nil? -%><%== render :template => 'auditevent_auditeventparticipantnetworkcomponent', :locals => {name: 'network', model: model.network()} %><%- end -%>
    <%- if (!model.purposeOfUse().nil? && !model.purposeOfUse.empty?) -%><%- model.purposeOfUse().each do |element| -%><%== render :template => 'coding', :locals => {name: 'purposeOfUse', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? name.downcase : name %>>
