<%== '<?xml version="1.0" encoding="UTF-8"?>' if is_root %>
<% local_name = name || 'MessageHeader' %>
<<%= (is_lowercase) ? local_name.downcase : local_name %>
<%== (is_root) ? ' xmlns="http://hl7.org/fhir"' : ''%>>
    <%== render :template => 'element', :locals => {model: model, is_resource: true} %>
    <%== render :template => 'resource', :locals => {model: model} %>
    <%- if !model.identifier().nil? -%><identifier value="<%= model.identifier() %>"/><%- end -%>
    <%- if !model.timestamp().nil? -%><%- if (!model.timestamp().match(/\A[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))))\Z/).nil?) -%><timestamp value="<%= model.timestamp %>"/><%- end -%><%- end -%>
    <%- if !model.event().nil? -%><%== render :template => 'coding', :locals => {name: 'event', model: model.event()} %><%- end -%>
    <%- if !model.response().nil? -%><%== render :template => 'messageheader_messageheaderresponsecomponent', :locals => {name: 'response', model: model.response()} %><%- end -%>
    <%- if !model.source().nil? -%><%== render :template => 'messageheader_messagesourcecomponent', :locals => {name: 'source', model: model.source()} %><%- end -%>
    <%- if (!model.destination().nil? && !model.destination.empty?) -%><%- model.destination().each do |element| -%><%== render :template => 'messageheader_messagedestinationcomponent', :locals => {name: 'destination', model: element} %><%- end -%><%- end -%>
    <%- if !model.enterer().nil? -%><%== render :template => 'reference', :locals => {name: 'enterer', model: model.enterer()} %><%- end -%>
    <%- if !model.author().nil? -%><%== render :template => 'reference', :locals => {name: 'author', model: model.author()} %><%- end -%>
    <%- if !model.receiver().nil? -%><%== render :template => 'reference', :locals => {name: 'receiver', model: model.receiver()} %><%- end -%>
    <%- if !model.responsible().nil? -%><%== render :template => 'reference', :locals => {name: 'responsible', model: model.responsible()} %><%- end -%>
    <%- if !model.reason().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'reason', model: model.reason()} %><%- end -%>
    <%- if (!model.data().nil? && !model.data.empty?) -%><%- model.data().each do |element| -%><%== render :template => 'reference', :locals => {name: 'data', model: element} %><%- end -%><%- end -%>
</<%= (is_lowercase) ? local_name.downcase : local_name %>>
