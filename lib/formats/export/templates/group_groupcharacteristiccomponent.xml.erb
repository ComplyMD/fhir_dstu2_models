<<%= (is_lowercase) ? name.downcase : name %>
<%if model.xmlId%> id="<%= model.xmlId%>"<%end%>
>
    <%== render :template => 'element', :locals => {model: model, is_resource: false} %>
    <%- if !model.code().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'code', model: model.code()} %><%- end -%>
    <%- if !model.valueCodeableConcept().nil? -%><%== render :template => 'codeableconcept', :locals => {name: 'valueCodeableConcept', model: model.valueCodeableConcept()} %><%- end -%>
    <%- if !model.valueBoolean().nil? -%><valueBoolean value="<%= model.valueBoolean %>"<%- if model.has_primitive_extension?('valueBoolean') -%>><%== model.get_primitive_extension('valueBoolean').to_xml(is_root: false, is_lowercase: true)  %></valueBoolean><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.valueQuantity().nil? -%><%== render :template => 'quantity', :locals => {name: 'valueQuantity', model: model.valueQuantity()} %><%- end -%>
    <%- if !model.valueRange().nil? -%><%== render :template => 'range', :locals => {name: 'valueRange', model: model.valueRange()} %><%- end -%>
    <%- if !model.exclude().nil? -%><exclude value="<%= model.exclude %>"<%- if model.has_primitive_extension?('exclude') -%>><%== model.get_primitive_extension('exclude').to_xml(is_root: false, is_lowercase: true)  %></exclude><%- else -%>/><%- end -%><%- end -%>
    <%- if !model.period().nil? -%><%== render :template => 'period', :locals => {name: 'period', model: model.period()} %><%- end -%>
</<%= (is_lowercase) ? name.downcase : name %>>
